name: Build and Deploy

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.ECR_REGISTRY }}/node-app:${{ github.sha }} .

    - name: Log in to Amazon ECR
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

    - name: Push Docker image to Amazon ECR
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        docker tag ${{ secrets.ECR_REGISTRY }}/node-app:${{ github.sha }} ${{ secrets.ECR_REGISTRY }}/node-app:latest
        docker push ${{ secrets.ECR_REGISTRY }}/node-app:${{ github.sha }}
        docker push ${{ secrets.ECR_REGISTRY }}/node-app:latest

    - name: Deploy to EC2
      env:
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
        ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
        GITHUB_SHA: ${{ github.sha }}
      run: |
        ssh -o StrictHostKeyChecking=no -i $EC2_SSH_KEY ec2-user@$EC2_PUBLIC_IP << 'EOF'
        docker pull $ECR_REGISTRY/node-app:$GITHUB_SHA
        docker stop node-app || true
        docker rm node-app || true
        docker run -d --name node-app -p 80:3000 $ECR_REGISTRY/node-app:$GITHUB_SHA
        EOF
